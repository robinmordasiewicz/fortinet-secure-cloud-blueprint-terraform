---
name: Policy Enforcement

on: #  yamllint disable-line rule:truthy
  workflow_dispatch:
  push:
    branches:
      - "*"
      - "!main"
    paths:
      - "**.rego"
      - "**.tf"
  #pull_request:
  #  branches:
  #    - main

permissions:
  id-token: write
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

jobs:
  open-policy-agent:
    environment:
      name: ${{ github.ref_name }}
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608

      - name: Setup OPA
        uses: open-policy-agent/setup-opa@9501844990f7dcfd09b17a8d97c794d294620f37
        with:
          version: latest

      - name: Microsoft Azure Authentication
        uses: azure/login@92a5484dfaf04ca78a94597f4f19fea633851fa2
        with:
          client-id: ${{ secrets.ARM_CLIENT_ID }}
          tenant-id: ${{ secrets.ARM_TENANT_ID }}
          subscription-id: ${{ secrets.ARM_SUBSCRIPTION_ID }}

      - name: Hashicorp Terraform
        uses: hashicorp/setup-terraform@a1502cd9e758c50496cc9ac5308c4843bcd56d36
        with:
          terraform_version: 1.6.2
          terraform_wrapper: false

      - name: terraform init
        id: init
        env:
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          ARM_USE_OIDC: true
          TF_IN_AUTOMATION: true
          TF_CLI_ARGS_init: -backend-config="storage_account_name=${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }}" -backend-config="container_name=${{ secrets.TFSTATE_CONTAINER_NAME }}" -backend-config="resource_group_name=${{ secrets.AZURE_RESOURCE_GROUP_NAME }}" -backend-config="key=${{ github.ref_name }}" -backend-config="use_oidc=true" -input=false
        run: terraform init

      - name: terraform plan
        id: tf-plan
        env:
          TF_VAR_AZURE_RESOURCE_GROUP_NAME: ${{ secrets.AZURE_RESOURCE_GROUP_NAME }}
          TF_VAR_AZURE_REGION: ${{ secrets.AZURE_REGION }}
          TF_VAR_AZURE_USERNAME: ${{ secrets.AZURE_USERNAME }}
          TF_VAR_AZURE_STORAGE_ACCOUNT_ID: ${{ secrets.AZURE_STORAGE_ACCOUNT_ID }}
          TF_VAR_ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          TF_VAR_AZURE_SERVICE_PRINCIPAL_UUID: ${{ secrets.AZURE_SERVICE_PRINCIPAL_UUID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          ARM_USE_OIDC: true
          TF_IN_AUTOMATION: true
        run: |
          export exitcode=0
          terraform plan -detailed-exitcode -no-color -out tfplan || export exitcode=$?
          echo "exitcode=$exitcode" >> "$GITHUB_OUTPUT"
          if [ $exitcode -eq 1 ]; then
            echo Terraform Plan Failed!
            exit 1
          else
            terraform show -json tfplan > tfplan.json
            exit 0
          fi

      - name: Run OPA Tests
        run:
          opa eval data.policy.all_policies -d policies/ -i tfplan.json -f pretty
          # run: opa test policies/*.rego -v
          # run: conftest test tfplan.json
